Architekturmodell

Bevor eine grobe Architektur entworfen werden kann, muss man sich klar machen, welche Funktionen das zu implementierende Stück Software leisten soll. Aus der Anforderungserhebung geht hervor, dass eine Karte existieren muss, in die die erhaltenen Erkundungsinformationen des NXT eingetragen werden können und die in vereinfachter Form an die NXT's geschickt werden kann. Zusätzlich ist es hilfreich, wenn auch nicht zwingend gefordert, dass während des Missionsablaufs die aktuelle gesamte Karte visualisiert wird, um den Missionsfortschritt und das Verhalten der Roboter transparent zu machen.
Aus diesen Vorüberlegungen ist eine Implementierung der Model-View-Controler Architektur naheliegend. Im Modell werden NXT, NAO und die Karte abstrakt repräsentiert; Es gibt verschiedene Sichten auf die enthaltenen Daten, abhängig davon für wen die Information bestimmt ist.

Map Model

Im Map Model wird eine vereinfachte Darstellung der Karte und die Zielposition gespeichert. Bei der Karte wird dabei lediglich modelliert ob ein gewisser Bereich frei ist (also nicht durch ein Hindernis belegt) und wie warscheinlich es ist, dass er frei ist. Die Karte besteht aus einem Grid von gleichgroßen Kästchen die folgendermaßen geändert werden: In regelmäßigen Abständen erhält das MCC vom NXT eine Information über seine aktuelle Position sowie seinen Ausrichtungswinkel, relativ zu seiner Startposition. Die Informationen werden in sofern in der Karte eingetragen, als dass die durch den NXT belegten Kästchen zum Zeitpunkt der Übermittlung seiner Position, um 1 erhöht werden (initial: 0). Bei der Visualisierung der Karte bestimmt die Zahl auf den einzelnen Kästchen die Farbgebung und repräsentiert die Warscheinlichkeit, dass das Kästchen nicht durch ein Hinderniss belegt ist. Die Strategie der Erkundung besteht also nicht darin Hindernisse zu umfahren, sondern sich auf als frei vermuteten Flächen zu bewegen. Die Größe der Karte ist unabhängig von der Maßgabe in der Anforderungserhebung dynamisch, d.h. sie ist vollkommen losgelöst von der Größe des tatsächlichen Areals (unter anderem auch, weil nicht bekannt ist an welcher Position innerhalb des Gebiets die Roboter initial platziert werden). Bei Bedarf wird die karte automatisch um eine quadratische, so genannte MapSection erweitert.

NAO/NXT Model
Die Modelle der beiden Robotertypen (im Speziellen gibt es für jeden einzelnen Roboter eine eigene Instanz) halten zum einen die aktuelle Position innerhalb der Karte, sowie im Falle des NXT-Modells noch Informationen über die letzte Kalibirierung, sowie eine Spur der gefahrenen Strecke. Diese wird verwendet um nach einer Kalibrierung die Daten der Karte gegbenenfalls zu korrigieren (s. dazu Auswertung der Kalibirierung).


Die Aufgabe des Controlers ist es, Änderungen der Daten an das Model zu propagieren, damit es zu jedem Zeitpunkt aktuell ist. Der View verwendet die Daten des Modells, um den Anforderungen entsprechende Darstellungen zu erzeugen.
