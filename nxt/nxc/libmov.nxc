#include "libmov.h"

void vor(int strecke, distance& d)
{
//umdrehungen in cm = 17,6 +-0,1
// SensorUS(S1)~14, ungefähr 10cm
 Off(OUT_AB);
 int k_strecke = 0;
 if(strecke == 0)
 {
  while(weiter)
  {
   SetOutput(OUT_AB,Power, MOTOR_POWER,TachoLimit, 10000,RegMode, OUT_REGMODE_SYNC,RunState, OUT_RUNSTATE_RUNNING,OutputMode, 7,UpdateFlags, 7);
   while((MotorRunState(OUT_B) == OUT_RUNSTATE_RUNNING) && (SensorUS(S1) > 15) && (SENSOR_2 < 1) && (SENSOR_3 < 1) && weiter != 0);
   if(!((SensorUS(S1) > 15) && (SENSOR_2 < 1) && (SENSOR_3 < 1)))
   {
    weiter = 0;
    hit=1;
   }
   if(weiter)
   {
    k_strecke++;
    ResetTachoCount(OUT_A);
    Wait(500);
   }
  }
 }
 else
 {
   SetOutput(OUT_AB,Power, MOTOR_POWER,TachoLimit, strecke,RegMode, OUT_REGMODE_SYNC,RunState, OUT_RUNSTATE_RUNNING,OutputMode, 7,UpdateFlags, 7); 
   while((MotorRunState(OUT_B) == OUT_RUNSTATE_RUNNING) && (SensorUS(S1) > 15) && (SENSOR_2 < 1) && (SENSOR_3 < 1) && weiter != 0);
 }
 d.k = k_strecke;
 d.rest = MotorTachoCount(OUT_A);
 Off(OUT_AB);
}

void drehen(char richtung, int winkel){
 Off(OUT_AB);
 int lr; //links oder rechts
 switch(richtung){
 case 'l':
      lr = 100;
      RotateMotorEx(OUT_AB, MOTOR_POWER, 2*winkel*TEPPICH_ABWEICHUNG_L, lr, true/*=sync*/, true/*=bremsen*/);
      break;
 case 'r':
      lr = -100;
      RotateMotorEx(OUT_AB, MOTOR_POWER, 2*winkel*TEPPICH_ABWEICHUNG_R, lr, true/*=sync*/, true/*=bremsen*/);
      break;
 default:
      lr = 100;
      RotateMotorEx(OUT_AB, MOTOR_POWER, 2*winkel*TEPPICH_ABWEICHUNG_L, lr, true/*=sync*/, true/*=bremsen*/);
 }

 Off(OUT_AB);
}

void zurueck(int umdrehungen){
 RotateMotorEx(OUT_AB, MOTOR_POWER, -360*umdrehungen, 0, true/*=sync*/, true/*=bremsen*/);
 Wait(300);
 Off(OUT_AB);
}

